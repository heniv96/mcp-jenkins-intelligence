[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-jenkins-intelligence"
version = "1.0.0"
description = "MCP Jenkins Intelligence - Interactive Jenkins Pipeline Analysis for VSCode/Cursor AI"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastmcp>=2.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-jenkins>=1.8.0",
    "requests>=2.31.0",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "anyio>=4.0.0",
    "click>=8.0.0",
    "tenacity>=8.0.0",
    "croniter>=1.0.0",
    "uvicorn>=0.24.0",
    "starlette>=0.27.0",
    "fastapi>=0.100.0",
    "httpx>=0.25.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.0",
    "rich>=13.0.0",
    "tabulate>=0.9.0",
    "plotly>=5.17.0",
    "pandas>=2.0.0",
    "python-dateutil>=2.8.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "scipy>=1.11.0",
]

[project.scripts]
mcp-jenkins-intelligence = "mcp_jenkins_intelligence.server:main"

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py313']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
